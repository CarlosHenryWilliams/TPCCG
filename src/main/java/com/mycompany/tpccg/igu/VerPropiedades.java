/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.tpccg.igu;

import com.mycompany.tpccg.model.ControladoraLogica;
import com.mycompany.tpccg.model.Propiedad;
import com.mycompany.tpccg.model.TipoPropiedad;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author CharlyW
 */
public class VerPropiedades extends javax.swing.JFrame {

    ControladoraLogica controlLogica;

    public VerPropiedades() {
        initComponents();
        controlLogica = new ControladoraLogica();
        CargarTipoPropiedades();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPContenedorGeneral = new javax.swing.JPanel();
        jPHeader = new javax.swing.JPanel();
        jLTitulo = new javax.swing.JLabel();
        jPContenedorTabla = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPropiedades = new javax.swing.JTable();
        jPContenedorBotones = new javax.swing.JPanel();
        jBAdministrarTipoPropiedades = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBVender = new javax.swing.JButton();
        jPContenedorFormulario = new javax.swing.JPanel();
        jLFormDireccion = new javax.swing.JLabel();
        jLFormPrecio = new javax.swing.JLabel();
        jLFormCantAmb = new javax.swing.JLabel();
        jLFormTipoProp = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        cmbCantAmbientes = new javax.swing.JComboBox<>();
        cmbTipoPropiedad = new javax.swing.JComboBox();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        txtDireccion = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPContenedorGeneral.setBackground(new java.awt.Color(204, 204, 204));

        jPHeader.setBackground(new java.awt.Color(0, 153, 153));
        jPHeader.setPreferredSize(new java.awt.Dimension(428, 110));

        jLTitulo.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        jLTitulo.setForeground(new java.awt.Color(255, 255, 255));
        jLTitulo.setText("PROPIEDADES");

        javax.swing.GroupLayout jPHeaderLayout = new javax.swing.GroupLayout(jPHeader);
        jPHeader.setLayout(jPHeaderLayout);
        jPHeaderLayout.setHorizontalGroup(
            jPHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPHeaderLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPHeaderLayout.setVerticalGroup(
            jPHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPHeaderLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLTitulo)
                .addGap(25, 25, 25))
        );

        jPContenedorTabla.setBackground(new java.awt.Color(204, 204, 204));
        jPContenedorTabla.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));

        tablaPropiedades.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaPropiedades.setSelectionBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setViewportView(tablaPropiedades);

        javax.swing.GroupLayout jPContenedorTablaLayout = new javax.swing.GroupLayout(jPContenedorTabla);
        jPContenedorTabla.setLayout(jPContenedorTablaLayout);
        jPContenedorTablaLayout.setHorizontalGroup(
            jPContenedorTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPContenedorTablaLayout.setVerticalGroup(
            jPContenedorTablaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorTablaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPContenedorBotones.setBackground(new java.awt.Color(204, 204, 204));

        jBAdministrarTipoPropiedades.setBackground(new java.awt.Color(0, 153, 153));
        jBAdministrarTipoPropiedades.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBAdministrarTipoPropiedades.setForeground(new java.awt.Color(255, 255, 255));
        jBAdministrarTipoPropiedades.setText("ADMIN. TIPO PROPIEDADES");
        jBAdministrarTipoPropiedades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAdministrarTipoPropiedadesActionPerformed(evt);
            }
        });

        jBEliminar.setBackground(new java.awt.Color(0, 153, 153));
        jBEliminar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jBEliminar.setText("ELIMINAR");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jBEditar.setBackground(new java.awt.Color(0, 153, 153));
        jBEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBEditar.setForeground(new java.awt.Color(255, 255, 255));
        jBEditar.setText("EDITAR");
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBVender.setBackground(new java.awt.Color(0, 153, 153));
        jBVender.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBVender.setForeground(new java.awt.Color(255, 255, 255));
        jBVender.setText("VENDER");
        jBVender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVenderActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPContenedorBotonesLayout = new javax.swing.GroupLayout(jPContenedorBotones);
        jPContenedorBotones.setLayout(jPContenedorBotonesLayout);
        jPContenedorBotonesLayout.setHorizontalGroup(
            jPContenedorBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContenedorBotonesLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 113, Short.MAX_VALUE)
                .addComponent(jBVender, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAdministrarTipoPropiedades)
                .addContainerGap())
        );
        jPContenedorBotonesLayout.setVerticalGroup(
            jPContenedorBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorBotonesLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPContenedorBotonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAdministrarTipoPropiedades, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVender, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jPContenedorFormulario.setBackground(new java.awt.Color(204, 204, 204));

        jLFormDireccion.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLFormDireccion.setForeground(new java.awt.Color(0, 0, 0));
        jLFormDireccion.setText("Direccion");

        jLFormPrecio.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLFormPrecio.setForeground(new java.awt.Color(0, 0, 0));
        jLFormPrecio.setText("Precio");

        jLFormCantAmb.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLFormCantAmb.setForeground(new java.awt.Color(0, 0, 0));
        jLFormCantAmb.setText("Cant. Ambientes");

        jLFormTipoProp.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jLFormTipoProp.setForeground(new java.awt.Color(0, 0, 0));
        jLFormTipoProp.setText("Tipo Propiedad");

        txtPrecio.setBackground(new java.awt.Color(204, 204, 204));
        txtPrecio.setForeground(new java.awt.Color(0, 0, 0));

        cmbCantAmbientes.setBackground(new java.awt.Color(204, 204, 204));
        cmbCantAmbientes.setForeground(new java.awt.Color(0, 0, 0));
        cmbCantAmbientes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));

        cmbTipoPropiedad.setBackground(new java.awt.Color(204, 204, 204));
        cmbTipoPropiedad.setForeground(new java.awt.Color(0, 0, 0));
        cmbTipoPropiedad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));

        btnLimpiar.setBackground(new java.awt.Color(0, 153, 153));
        btnLimpiar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnGuardar.setBackground(new java.awt.Color(0, 153, 153));
        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        jBAgregar.setBackground(new java.awt.Color(0, 153, 153));
        jBAgregar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBAgregar.setForeground(new java.awt.Color(255, 255, 255));
        jBAgregar.setText("AGREGAR");
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        txtDireccion.setBackground(new java.awt.Color(204, 204, 204));
        txtDireccion.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPContenedorFormularioLayout = new javax.swing.GroupLayout(jPContenedorFormulario);
        jPContenedorFormulario.setLayout(jPContenedorFormularioLayout);
        jPContenedorFormularioLayout.setHorizontalGroup(
            jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLFormDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFormCantAmb, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFormTipoProp, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLFormPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLimpiar))
                .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                            .addGap(20, 20, 20)
                            .addComponent(cmbTipoPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                            .addGap(18, 18, 18)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContenedorFormularioLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnGuardar)))
                    .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbCantAmbientes, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(131, Short.MAX_VALUE))
        );
        jPContenedorFormularioLayout.setVerticalGroup(
            jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLFormDireccion)
                            .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLFormTipoProp)
                            .addComponent(cmbTipoPropiedad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPContenedorFormularioLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLFormCantAmb)
                            .addComponent(cmbCantAmbientes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLFormPrecio)
                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84)
                .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPContenedorFormularioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPContenedorGeneralLayout = new javax.swing.GroupLayout(jPContenedorGeneral);
        jPContenedorGeneral.setLayout(jPContenedorGeneralLayout);
        jPContenedorGeneralLayout.setHorizontalGroup(
            jPContenedorGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPHeader, javax.swing.GroupLayout.DEFAULT_SIZE, 1084, Short.MAX_VALUE)
            .addGroup(jPContenedorGeneralLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPContenedorGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPContenedorBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPContenedorGeneralLayout.createSequentialGroup()
                        .addComponent(jPContenedorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPContenedorFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        jPContenedorGeneralLayout.setVerticalGroup(
            jPContenedorGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPContenedorGeneralLayout.createSequentialGroup()
                .addComponent(jPHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPContenedorBotones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPContenedorGeneralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPContenedorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPContenedorGeneralLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jPContenedorFormulario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPContenedorGeneral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPContenedorGeneral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        CargarTablaPropiedades();
        btnGuardar.setEnabled(false);
    }//GEN-LAST:event_formWindowOpened

    private void jBAdministrarTipoPropiedadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAdministrarTipoPropiedadesActionPerformed
        this.dispose();
        VerTipoPropiedades verTipoPropiedades = new VerTipoPropiedades();
        verTipoPropiedades.setVisible(true);
        verTipoPropiedades.setLocationRelativeTo(null); // centra al medio la interfaz
    }//GEN-LAST:event_jBAdministrarTipoPropiedadesActionPerformed

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        // TODO add your handling code here:
// TODO add your handling code here:
        String direccionCasa = txtDireccion.getText();

        String tipoPropiedadCasaDescripcion = (String) cmbTipoPropiedad.getSelectedItem(); // rural

        TipoPropiedad tipoPropiedadCasa = new TipoPropiedad();
        // Recorro  para igualar un tipoPropiedad con la descripcion y cargarlo a tipoPropiedadCasa
        List<TipoPropiedad> listaTipoPropiedades = controlLogica.traerTipoPropiedades();
        for (TipoPropiedad tipoPropi : listaTipoPropiedades) {

            if (tipoPropiedadCasaDescripcion.equals(tipoPropi.getDescripcion())) { // me fijo que el tipo propiedad coincida
                tipoPropiedadCasa = tipoPropi; // seteo el tipo de propeidad
            }

        }

        int cantAmbientesCasa = Integer.parseInt((String) cmbCantAmbientes.getSelectedItem());
        Double precioCasa = Double.parseDouble(txtPrecio.getText());

        controlLogica.agregarPropiedad(direccionCasa, tipoPropiedadCasa, cantAmbientesCasa, precioCasa);
        mostrarMensaje("Propiedad Agregada Correctamente", "Info", "Se ha agregado con exito"); // Llama al metodo Mostrar Mensaje

        CargarTablaPropiedades();

    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBVenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jBVenderActionPerformed

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        // TODO add your handling code here:
        //  Controlar que la tabla no este vacia
        if (tablaPropiedades.getRowCount() > 0) {  // controlamos que la tabla no este vacia o sea que haya mas de un registro
            // Controlar que la columna este seleccionada
            if (tablaPropiedades.getSelectedRow() != -1) { // -1 significa que no hay ninguna seleccionada

                // explicacion ----- getValueAt (traeme el valor de ) la fila seleccionada y la columna 0; pasamos a String porque lo trae en forma de objeto y a ese string lo pasamos a int
                int idPropiedadSeleccionado = Integer.parseInt(String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 0)));
                controlLogica.borrarPropiedad(idPropiedadSeleccionado);
                mostrarMensaje("Propiedad Eliminada Correctamente", "Info", "Eliminacion Exitosa"); // Llama al metodo Mostrar Mensaje
                CargarTablaPropiedades();
            } else {
                mostrarMensaje("No se ha seleccionado ninguna fila", "Error", "Error al no seleccionar");
            }
        } else {
            mostrarMensaje("La tabla se encuentra vacia", "Error", "Tabla Vacia");
        }


    }//GEN-LAST:event_jBEliminarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        //  Controlar que la tabla no este vacia
        if (tablaPropiedades.getRowCount() > 0) {  // controlamos que la tabla no este vacia o sea que haya mas de un registro
            // Controlar que la columna este seleccionada
            if (tablaPropiedades.getSelectedRow() != -1) { // -1 significa que no hay ninguna seleccionada

                // DESHABILITO EL BOTON AGREGAR SI SELECCIONO UINO
                jBAgregar.setEnabled(false);
                btnGuardar.setEnabled(true);

                
                
                
                // explicacion ----- getValueAt (traeme el valor de ) la fila seleccionada y la columna 0; pasamos a String porque lo trae en forma de objeto y a ese string lo pasamos a int
                int idPropiedadSeleccionado = Integer.parseInt(String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 0)));
                String tipoPropiedadSeleccionado = String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 1));
                String direccionSeleccionada = String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 2));
                int ambientesSeleccionado = Integer.parseInt(String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 3)));
                String precioSeleccionado = String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 4));

                // Recorrer combob box para buscar el valor igual al que llego y setearlo en ese indice CMB AMBIENTES
                for (int i = 0; i < cmbCantAmbientes.getItemCount(); i++) {
                    System.out.println(cmbCantAmbientes.getItemAt(i));
                    System.out.println(ambientesSeleccionado);

                    if (cmbCantAmbientes.getItemAt(i).equals(String.valueOf(ambientesSeleccionado))) { // si es igual lo setea
                        System.out.println("ENTRO DETECTO QUE SON IGUALES");
                        cmbCantAmbientes.setSelectedIndex(i);
                    }
                }

                // Recorrer combob box para buscar el valor igual al que llego y setearlo en ese indice CMB TIPO PROPIEDAD
                for (int i = 0; i < cmbTipoPropiedad.getItemCount(); i++) {

                    if (cmbTipoPropiedad.getItemAt(i).equals(tipoPropiedadSeleccionado)) { // si es igual lo setea
                        cmbTipoPropiedad.setSelectedIndex(i);
                    }
                }

                txtPrecio.setText(precioSeleccionado);
                txtDireccion.setText(direccionSeleccionada);

            } else {
                mostrarMensaje("No se ha seleccionado ninguna fila", "Error", "Error al no seleccionar");
            }
        } else {
            mostrarMensaje("La tabla se encuentra vacia", "Error", "Tabla Vacia");
        }


    }//GEN-LAST:event_jBEditarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        txtDireccion.setText("");
        txtPrecio.setText("");
        cmbCantAmbientes.setSelectedIndex(0);
        cmbTipoPropiedad.setSelectedIndex(0);

        // Habilito EL BOTON AGREGAR SI SELECCIONO UINO
        jBAgregar.setEnabled(true);
        btnGuardar.setEnabled(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String direccionCasa = txtDireccion.getText();

        String tipoPropiedadCasaDescripcion = (String) cmbTipoPropiedad.getSelectedItem();
        TipoPropiedad tipoPropiedadCasa = new TipoPropiedad();
        // Recorro  para igualar un tipoPropiedad con la descripcion y cargarlo a tipoPropiedadCasa
        List<TipoPropiedad> listaTipoPropiedades = controlLogica.traerTipoPropiedades();
        for (TipoPropiedad tipoPropi : listaTipoPropiedades) {

            if (tipoPropiedadCasaDescripcion.equals(tipoPropi.getDescripcion())) {
                tipoPropiedadCasa = tipoPropi; // seteo el tipo de propeidad
            }

        }

        int cantAmbientesCasa = Integer.parseInt((String) cmbCantAmbientes.getSelectedItem());
        Double precioCasa = Double.parseDouble(txtPrecio.getText());
        int idPropiedadSeleccionado = 0;
        if (tablaPropiedades.getSelectedRow() != -1) { // -1 significa que no hay ninguna seleccionada

            // explicacion ----- getValueAt (traeme el valor de ) la fila seleccionada y la columna 0; pasamos a String porque lo trae en forma de objeto y a ese string lo pasamos a int
            idPropiedadSeleccionado = Integer.parseInt(String.valueOf(tablaPropiedades.getValueAt(tablaPropiedades.getSelectedRow(), 0)));
        }

        controlLogica.modificarPropiedad(idPropiedadSeleccionado, direccionCasa, tipoPropiedadCasa, cantAmbientesCasa, precioCasa);
        mostrarMensaje("Propiedad Modfiicada Correctamente", "Info", "Se ha modificado la propiedad con exito"); // Llama al metodo Mostrar Mensaje*/
        CargarTablaPropiedades();
        btnLimpiar.doClick();
       
        

    }//GEN-LAST:event_btnGuardarActionPerformed
    public void mostrarMensaje(String mensaje, String tipo, String titulo) {

        JOptionPane optionPane = new JOptionPane(mensaje);
        if (tipo.equals("Info")) {
            optionPane.setMessageType(JOptionPane.INFORMATION_MESSAGE);
        } else if (tipo.equals("Error")) {
            optionPane.setMessageType(JOptionPane.ERROR_MESSAGE);
        }
        JDialog dialog = optionPane.createDialog(titulo);
        dialog.setAlwaysOnTop(true);
        dialog.setVisible(true);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox<String> cmbCantAmbientes;
    private javax.swing.JComboBox cmbTipoPropiedad;
    private javax.swing.JButton jBAdministrarTipoPropiedades;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBVender;
    private javax.swing.JLabel jLFormCantAmb;
    private javax.swing.JLabel jLFormDireccion;
    private javax.swing.JLabel jLFormPrecio;
    private javax.swing.JLabel jLFormTipoProp;
    private javax.swing.JLabel jLTitulo;
    private javax.swing.JPanel jPContenedorBotones;
    private javax.swing.JPanel jPContenedorFormulario;
    private javax.swing.JPanel jPContenedorGeneral;
    private javax.swing.JPanel jPContenedorTabla;
    private javax.swing.JPanel jPHeader;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPropiedades;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables

    private void CargarTablaPropiedades() {

        // SETEAR MODELO TABLA
        DefaultTableModel modeloTablaPropiedades = new DefaultTableModel() {

            // que fila y columnas no sea editable
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        // setear nombre de las columnas
        String nombreColumnas[] = {"idPropiedad", "TipoPropiedad", "Direccion", "Ambientes", "Precio", "Vendida"};
        modeloTablaPropiedades.setColumnIdentifiers(nombreColumnas);

        // traer propiedades
        List<Propiedad> listaPropiedades = controlLogica.traerPropiedades();

        String variableVendida = "";
        if (listaPropiedades != null) {

            for (Propiedad propiedad : listaPropiedades) {

                if (propiedad.getVendida() == true) {
                    variableVendida = "Si";
                } else {
                    variableVendida = "No";
                }

                Object[] objeto = {propiedad.getIdPropiedad(), propiedad.getTipoPropiedad().getDescripcion(), propiedad.getDireccion(),
                    propiedad.getAmbientes(), propiedad.getPrecio(), variableVendida};

                modeloTablaPropiedades.addRow(objeto);

            }
        }

        tablaPropiedades.setModel(modeloTablaPropiedades);
    }

    private void CargarTipoPropiedades() {
        List<TipoPropiedad> listaTipoPropiedades = controlLogica.traerTipoPropiedades();
        for (TipoPropiedad tipoPropi : listaTipoPropiedades) {
            cmbTipoPropiedad.addItem(tipoPropi.getDescripcion());
        }
    }
}
